// Holds types for communication between the scheduler and the controller

import {cache, log} from "../core/db";

export type healthCheckResponse = {
    status: 'OK' | 'NOK';
    uptime: number;
    version: string;
    arch: string;
    os: string;
}
export type nodeRegistrationRequest = {
    node_name: string, // The name of the node (randomly generated or set by the user)
    node_psk: string, // The pre-shared key for the node (generated by the node and hashed when we get it here so we can store it in the database without any trouble)
    node_address: string, // The address of the node (IP or domain)
    node_port: number, // The port of the node
    node_version: string, // The version of the node
    node_arch: string, // The architecture of the node (x86_64, arm64, etc.)
    node_os: string, // The operating system of the node (Linux, Darwin, etc.)
    node_max_jobs: number // The maximum number of jobs the node can handle at once
}

export type derivationPackageOverview = {
    total: number,
    storage_used: number
}
export type cacheOverview = {
    audit_log: log[]
    info: cache
    packages: derivationPackageOverview
}
